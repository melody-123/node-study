// 1.中间件概念：本质是一个回调函数，接受三个参数：request、response、next，可以像路由回调一样访问请求对象request和响应对象response。
// 2.中间件作用：使用函数封装公共操作，简化代码，提高开发效率。
// 3.中间件分类：全局中间件、局部中间件、内置中间件、第三方中间件、错误处理中间件、自定义中间件等。
// 4.中间件使用：app.use()，app.use()可以使用多次，中间件按照顺序执行。
// 5.中间件执行顺序：全局中间件 -> 路由中间件 -> 错误处理中间件。

// 定义全局中间件
const func1 = (request, response, next) => {
    // 实现代码功能
    console.log('全局中间件1');
    // 执行next()函数，执行完中间件后希望执行下一个回调函数或者中间件，必须调用next()，如果没有next()函数，后面的中间件不会执行，请求也不会响应，浏览器会一直处于加载状态。
    next();
};
// 使用全局中间件
app.use(func1)

// 定义路由中间件